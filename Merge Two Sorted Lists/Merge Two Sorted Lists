/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        ListNode* res = new ListNode{-1,nullptr};
        ListNode* t_res = res;
        while(l1!=nullptr && l2!=nullptr)
        {
            if(l1->val > l2->val)
            {
                res->next = l2;
                l2=l2->next;
            }
            else{
                res->next = l1;
                l1 = l1->next;
            }
            res = res->next;
        }
        if(l1!=nullptr)
        {
            res ->next = l1;
        }
        if(l2!=nullptr)
        {
            res->next = l2;
        }
        return t_res->next;
    }
};